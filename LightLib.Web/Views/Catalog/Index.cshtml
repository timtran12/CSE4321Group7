@model LightLib.Web.Models.Catalog.AssetIndexModel
@{
    ViewBag.Title = "Library Assets";
}

<h2 class="lms-section-heading">
    Library Assets
</h2>

<div class="row">
    <section>
        <p>
            <strong>Assets</strong> make up the collection of all resources a library can loan across all branches.
        </p>
        <p>
            Use this page to add, update, or remove Assets, see checkout queues, and mark items as lost or found.
        </p>
    </section>
</div>


<div class="row">
    <div class="col-12">
        <button class="btn btn-primary btn-sm">
            Add New Asset
        </button>
        <button class="btn btn-primary btn-sm">
            Edit
        </button>
        <button class="btn btn-primary btn-sm">
            Delete
        </button>


        <h3>Create a new Book</h3>
        <form onsubmit="createBook(event)">
            <label for="title">Title</label>
            <input id="title" type="text" value="Alice in Wonderland" />
            <br />

            <label for="Author">Author</label>
            <input id="Author" type="text" value="Author" />
            <br />

            <label for="ISBN">ISBN</label>
            <input id="ISBN" type="text" value="abc-abc" />
            <br />

            <label for="PubliciationYear">Publication Date</label>
            <input id="PublicationYear" type="text" value="1649" />
            <br />

            <input type="submit" value="Submit" />
            <br />
        </form>

    </div>
</div>

<hr />

<div class="row">
    <div class="container container-fluid">
        <nav aria-label="Asset Table Navigation Top">
            <ul class="pagination justify-content-end">
                <li class="page-item small"><a class="page-link" href="#">Previous</a></li>
                <li class="page-item small"><a class="page-link" href="#">Next</a></li>
            </ul>
        </nav>
        <table class="table table-sm table-responsive-sm">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">AssetId</th>
                    <th scope="col">Title</th>
                    <th scope="col">Author</th>
                    <th scope="col">ISBN</th>
                    <th scope="col">Publication Year</th>
                    <th scope="col">Language</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var asset in Model.PageOfAssets.Results)
                {
                    <tr>
                        <th scope="row">@asset.Id</th>
                        <td>@asset.Title</td>
                        @* <td>@asset.Status.Name</td> *@
                        <td>@asset.Location.Name</td>
                    </tr>
                }
            </tbody>
        </table>
        <nav aria-label="Asset Table Navigation Bottom">
            <ul class="pagination justify-content-end">
                <li class="page-item small"><a class="page-link" href="#">Previous</a></li>
                <li class="page-item small"><a class="page-link" href="#">Next</a></li>
            </ul>
        </nav>
    </div>
</div>

<script>

    var createBook = (event) => {
        event.preventDefault();

        console.log("title", document.getElementById("title").value);
        var asset = {
            Id: "0",
            Title: "dab",
            Year: 123,
            Status: {
                Id: 0,
                Name: "test",
                Description: "this is a description"
            },
            Cost: 12.00,
            ImageUrl: "dab.png",
            NumberOfCopies: 3,
            AssetType: 1,
            Location: {
                Id: 3,
                Name: "temp",
                Address: "temp",
                Telephone: "temp"
            }
        }   

        console.log("the asset is:", asset);


        const xhr = new XMLHttpRequest();

        xhr.open("POST", "http://localhost:8000/Catalog/NewAsset");
        xhr.setRequestHeader("Accept", "application/json");
        xhr.setRequestHeader("Content-Type", "application/json");
        console.log(JSON.stringify(asset));

        xhr.send(JSON.stringify(asset));

        xhr.onerror = function(error) {
            console.log("Error:", error);
        }


    }

</script>

